swagger: "2.0"
info:
  description: "TOSCA Simple qUeRy sErvice (SURE). "
  version: "1.0.0"
  title: "tosca-sure"
  contact:
    email: "S.Koulouzis@uva.nl"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/tosca-sure/1.0.0"
schemes:
- "https"
- "http"
paths:
  /tosca_template:
    post:
      summary: "upload a tosca template description file"
      description: "upload and validate a tosca template description file"
      operationId: "uploadToscaTemplate"
      consumes:
      - "multipart/form-data"
      parameters:
      - in: "formData"
        name: "file"
        type: file
        description: "tosca Template description"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        405:
          description: "Invalid input"
  /tosca_template/{id}:
    get:
      description: ""
      operationId: "getToscaTemplate"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/ToscaTemplate.yml#/ToscaTemplate"
        404:
          description: "Not found"               
        405:
          description: "Invalid input"            
  /tosca_template/{id}/imports:
    get:
      summary: ""
      description: "returns the interface types"
      operationId: "getImports"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                  type: object     
        404:
          description: "Not found"                  
        405:
          description: "Invalid input"          
  /tosca_template/{id}/dsl_definitions:
    get:
      summary: ""
      description: "returns the interface types"
      operationId: "getDslDefinitions"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: query
        name: anchors
        type: array
        items:
          type: string
        required: false
        description: the anchors the definition is for 
      - in: query
        name: derived_from
        type: string
        required: false
        description: derived from        
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                  type: object     
        404:
          description: "Not found"                  
        405:
          description: "Invalid input"             
  /tosca_template/{id}/types:
    get:
      summary: ""
      description: "returns the interface types"
      operationId: "getTypes"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: query
        name: kind_of_type
        description: the type we are looking for e.g. capability_types, artifact_types. etc.
        type: string
        enum: [node_types, relationship_types, capability_types, artifact_types, data_types, interface_types, policy_types, group_types]              
      - in: query
        name: has_interfaces
        type: boolean
        description: filter if has interfaces           
      - in: query
        name: type_name
        type: string
        required: false
        description: The relationship type
      - in: query
        name: has_properties
        type: boolean
        description: filter if has properties   
      - in: query
        name: has_attributes
        type: boolean
        description: filter if has attributes           
      - in: query
        name: has_requirements
        type: boolean
        description: filter if has requirements           
      - in: query
        name: has_capabilities
        type: boolean
        description: filter if has capabilities         
      - in: query
        name: has_artifacts
        type: boolean
        description: filter if has artifacts           
      - in: query
        name: derived_from
        type: string
        required: false
        description: derived from 
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                  type: object     
        404:
          description: "Not found"                  
        405:
          description: "Invalid input"     
  /tosca_template/{id}/relationship_templates:
    get:
      summary: ""
      description: "returns the interface types"
      operationId: "getRrelationshipTemplates"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: query
        name: type_name
        type: string
        required: false
        description: The relationship type
      - in: query
        name: derived_from
        type: string
        required: false
        description: derived from 
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                  type: object     
        404:
          description: "Not found"                  
        405:
          description: "Invalid input"              
  /tosca_template/{id}/topology_template:
    get:
      description: "r"
      operationId: "getTopologyTemplate"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/TopologyTemplate.yml#/TopologyTemplate"
        404:
          description: "Not found"               
        405:
          description: "Invalid input"        
  /tosca_template/{id}/topology_template/node_templates:
    get:
      description: "returns nodes templates in topology"
      operationId: "getNodeTemplates"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: query
        name: type_name
        type: string
        required: false
        description: The type
      - in: query
        name: name_key
        type: string
        required: false
        description: the name key       
      - in: query
        name: has_interfaces
        type: boolean
        description: filter if has interfaces           
      - in: query
        name: has_properties
        type: boolean
        description: filter if has properties   
      - in: query
        name: has_attributes
        type: boolean
        description: filter if has attributes           
      - in: query
        name: has_requirements
        type: boolean
        description: filter if has requirements           
      - in: query
        name: has_capabilities
        type: boolean
        description: filter if has capabilities         
      - in: query
        name: has_artifacts
        type: boolean
        description: filter if has artifacts           
      - in: query
        name: derived_from
        type: string
        required: false
        description: derived from          
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"
  /tosca_template/{id}/topology_template/node_templates/type_name:
    get:
      summary: ""
      description: ""
      operationId: "getNodeTypeName"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: "the NodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        404:
          description: "Not found"               
        405:
          description: "Invalid input"      
  /tosca_template/{id}/topology_template/node_templates/requirements:
    get:
      description: "Returns  the requirements for an input node as described in the template not in the node's definition "
      operationId: "getNodeRequirements"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: ""
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            additionalProperties:
                type: object 
        404:
          description: "Not found"                   
        405:
          description: "Invalid input"       
  /tosca_template/{id}/topology_template/node_templates/derived_from:
    get:
      summary: ""
      description: ""
      operationId: "getParentTypeName"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: ""
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: string
        404:
          description: "Not found"               
        405:
          description: "Invalid input"      
  /tosca_template/{id}/topology_template/node_templates/ancestors_requirements:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including the input node's"
      operationId: "getAncestorsRequirements"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            additionalProperties:
                type: object 
        404:
          description: "Not found"                   
        405:
          description: "Invalid input"    
  /tosca_template/{id}/topology_template/node_templates/ancestors_types:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including the input node's"
      operationId: "getAllAncestorTypes"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: string
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"        
  /tosca_template/{id}/topology_template/node_templates/ancestors_properties:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including the input node's"
      operationId: "getAllAncestorProperties"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                  type: object 
        404:
          description: "Not found"                     
        405:
          description: "Invalid input"   
  /tosca_template/{id}/topology_template/node_templates/properties:
    get:
      summary: ""
      description: "s"
      operationId: "getNodeProperties"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            additionalProperties:
              type: object
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"       
    put:
      summary: ""
      description: "s"
      operationId: "setNodeProperties"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "properties"
        required: true
        schema:
          type: object
          additionalProperties:
            type: string      
      - in: query
        name: node_name
        type: string
        description: The node name
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            additionalProperties:
              type: object
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"   
  /tosca_template/{id}/topology_template/node_templates/outputs:
    get:
      summary: ""
      description: "s"
      operationId: "getNodeOutputs"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            additionalProperties:
              type: object
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"       
  /tosca_template/{id}/topology_template/node_templates/related:
    get:
      summary: ""
      description: "s"
      operationId: "getRelatedNodes"
      produces:
        - "application/json"      
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
      - in: query
        name: name_key
        type: string
        required: false
        description: The name_key   
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/openAPI/TOSCA/NodeTemplate.yml#/NodeTemplate"
        404:
          description: "Not found"                 
        405:
          description: "Invalid input"