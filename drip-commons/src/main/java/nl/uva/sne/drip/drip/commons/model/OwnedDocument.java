/*
 * Copyright 2019 S. Koulouzis, Huan Zhou, Yang Hu 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package nl.uva.sne.drip.drip.commons.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.webcohesion.enunciate.metadata.DocumentationExample;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.persistence.EntityListeners;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.persistence.PrePersist;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import static javax.persistence.TemporalType.TIMESTAMP;
import javax.validation.constraints.NotNull;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;
import org.springframework.security.core.userdetails.User;

/**
 * This is the base class for users to own resources. Many classes extend this
 * class
 *
 * @author S. Koulouzis
 */
@MappedSuperclass
@EntityListeners(AuditingEntityListener.class)
abstract class OwnedDocument {

    @Id
    private String id;

    @CreatedBy
    protected User owner;

    @CreatedDate
    @Temporal(TIMESTAMP)
    private Date creationDate;

    @LastModifiedBy
    private User modifier;

    @LastModifiedDate
    @Temporal(TIMESTAMP)
    protected Date modificationdDate;

    /**
     * The owner (username) for the particular object. This value is set when
     * the DAO saves the object based on the principal who made the call. It is
     * created automatically. No need to set during a POST
     *
     * @return the owner
     */
    @DocumentationExample("user1")
    public User getOwner() {
        return owner;
    }

    /**
     * @param owner the ownerID to set
     */
    public void setOwner(User owner) {
        this.owner = owner;
    }

    /**
     * The UID of this object. This value is auto generated by the DAO when the
     * object is saved.
     *
     * @return the id
     */
    @DocumentationExample("58e3946e0fb4f562d84ba1ad")
    public String getId() {
        return id;
    }

    /**
     * @return the modifier
     */
    @DocumentationExample("user1")
    public User getModifieder() {
        return modifier;
    }

    /**
     * @param modifieder the modifier to set
     */
    public void setModifieder(User modifieder) {
        this.modifier = modifieder;
    }

    /**
     * @return the creationDate
     */
    public Date getCreationDate() {
        return creationDate;
    }

    /**
     * @param creationDate the creationDate to set
     */
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

}
