/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package nl.uva.sne.drip.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-10T17:15:46.465Z")

@Api(value = "planner", description = "the planner API")
public interface PlannerApi {

    @ApiOperation(value = "get the plan tosca template", nickname = "getPlanToscaTemplateByID", notes = "Returns the plan topolog template", response = String.class, authorizations = {
        @Authorization(value = "drip_auth", scopes = {
            @AuthorizationScope(scope = "read:ToscaTemplate", description = "read your topolog template"),
            @AuthorizationScope(scope = "write:ToscaTemplate", description = "modify topolog template in your account")
            })
    }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = String.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "ToscaTemplate not found"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/planner/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
    ResponseEntity<String> getPlanToscaTemplateByID(@ApiParam(value = "ID of topolog template plan",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "plan tosca template", nickname = "planToscaTemplateByID", notes = "Returns the ID of the planed topolog template", response = String.class, authorizations = {
        @Authorization(value = "drip_auth", scopes = {
            @AuthorizationScope(scope = "read:ToscaTemplate", description = "read your topolog template"),
            @AuthorizationScope(scope = "write:ToscaTemplate", description = "modify topolog template in your account")
            })
    }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = String.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "ToscaTemplate not found"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/planner/plan/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
    ResponseEntity<String> planToscaTemplateByID(@ApiParam(value = "ID of topolog template to plan",required=true) @PathVariable("id") String id);

}
