{
  "creationDate": 1491309802500,
  "parameters": [
    {
      "url": null,
      "encoding": "UTF-8",
      "value": null,
      "name": "credential",
      "attributes": {
        "role": "master",
        "IP": "52.91.133.78",
        "user": "ubuntu"
      }
    },
    {
      "url": null,
      "encoding": "UTF-8",
      "value": null,
      "name": "credential",
      "attributes": {
        "role": "slave",
        "IP": "54.144.250.248",
        "user": "ubuntu"
      }
    },
    {
      "url": null,
      "encoding": "UTF-8",
      "value": "ansible",
      "name": "cluster",
      "attributes": null
    },
    {
      "url": null,
      "encoding": "UTF-8",
      "value": "'---':\n- hosts: all\n  tasks:\n  - name: install sysbench\n    apt: name=\"{{ item }}\" update_cache=yes state=latest\n    with_items: [phoronix-test-suite, sysbench, expect, git, python-pexpect, php-zip]\n    become: true\n  - {name: Phoronix-test-suite accept User Agreement, command: 'expect -c \"spawn phoronix-test-suite;\n      expect \\\"Do you agree to these terms and wish to proceed \\(Y/n\\):\\\"; send \\\"Y\n      \\\"; expect \\\"Enable anonymous usage / statistics reporting \\(Y/n\\):\\\"; send\n      \\\"n \\\"; expect \\\"Enable anonymous statistical reporting of installed software\n      / hardware \\(Y/n\\):\\\"; send \\\"n \\\"; interact;\"', become: true}\n  - {name: Install stream, command: phoronix-test-suite install-test stream, become: true}\n  - {name: Install iozone, command: phoronix-test-suite install-test iozone, become: true}\n  - {name: Count vCPU, command: nproc, register: vcpunumber, become: true}\n  - {debug: 'msg=\"{{ vcpunumber．stdout }}\"'}\n  - {name: Run sysbench, command: 'sysbench --test=cpu --cpu-max-prime=100000 --num-threads={{\n      vcpunumber．stdout }} run', register: sysbenchoutput, become: true}\n  - {debug: 'msg=\"{{ sysbenchoutput．stdout }}\"'}\n  - {name: Run stream, command: 'expect -c \"spawn phoronix-test-suite run-test stream;\n      expect \\\"Type:\\\"; send \\\"4 \\\"; expect \\\"\\(Y/n\\):\\\"; send -- \\\"y\\r\\\"; expect\n      \\\"Enter a name to save these results under:\\\"; send \\\"out \\\"; expect \\\"Enter\n      a unique name to describe this test run / configuration:\\\"; send -- \\\"unique\\r\\\";\n      expect \\\"New Description:\\\"; send  \\\"\\r\\\"; expect \\\"Would you like to upload\n      the results to OpenBenchmarking．org (Y/n):\\\"; send  \\\"n\\r\\\"; interact;\"', register: streamoutput,\n    become: true}\n  - {debug: 'msg=\"{{ streamoutput．stdout }}\"'}\n  - {name: Run iozone, command: 'expect -c \"spawn phoronix-test-suite run-test iozone;\n      expect \\\"Record Size:\\\"; send \\\"2 \\\"; expect \\\"File Size:\\\"; send \\\"2 \\\"; expect\n      \\\"Disk Test:\\\"; send \\\"3 \\\";  expect \\\"\\(Y/n\\):\\\"; send -- \\\"y\\r\\\"; expect \\\"Enter\n      a name to save these results under:\\\"; send \\\"out \\\"; expect \\\"Enter a unique\n      name to describe this test run / configuration:\\\"; send -- \\\"unique\\r\\\"; expect\n      \\\"New Description:\\\"; send  \\\"\\r\\\"; expect \\\"Would you like to upload the results\n      to OpenBenchmarking．org (Y/n):\\\"; send  \\\"n\\r\\\"; interact;\"', register: iozoneoutput,\n    become: true}\n  - {name: Get stream results, command: phoronix-test-suite result-file-to-csv out,\n    register: streamoutput, become: true}\n  - {debug: 'msg=\"{{ streamoutput．stdout }}\"'}\n",
      "name": "playbook",
      "attributes": null
    }
  ]
}
