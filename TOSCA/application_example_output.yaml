description: TOSCA example
imports:
- nodes: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/nodes.yaml
- capabilities: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/capabilities.yaml
- policies: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/policies.yaml
- interfaces: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/interfaces.yml
topology_template:
  node_templates:
    compute:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        cpu_frequency:
          constraints:
          - greater_or_equal: 0.5 GHz
          required: false
          type: scalar-unit.frequency
        disk_size:
          constraints:
          - greater_or_equal: 15000 MB
          default: 50000 MB
          required: true
          type: scalar-unit.size
        host_name:
          default: vm
          required: true
          type: string
        mem_size:
          constraints:
          - greater_or_equal: 500 MB
          default: 6000 MB
          required: true
          type: scalar-unit.size
        node_type:
          description: the type of VM depending on the provider. e.g. XOSmall, t.medium
            etc. It has to match the mem_size, num_cores etc.
          required: false
          type: string
        num_cores:
          constraints:
          - greater_or_equal: 1
          default: 2
          required: true
          type: integer
        os:
          default: ubuntu 14.04
          required: true
          type: string
        private_ip:
          description: The private IP of the VM e.g. 192.168.10.10
          required: false
          type: string
        role:
          constraints:
          - valid_values:
            - master
            - worker
          default: master
          description: the role of the VM in the topology
          required: true
          type: string
        user_name:
          default: vm_user
          required: true
          type: string
      type: tosca.nodes.ARTICONF.VM.Compute
    compute_1:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        disk_size: 50000 MB
        host_name: vm
        mem_size: 6000 MB
        num_cores: 2
        os: ubuntu 14.04
        role: worker
        user_name: vm_user
      type: tosca.nodes.ARTICONF.VM.Compute
    compute_2:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        disk_size: 50000 MB
        host_name: vm
        mem_size: 6000 MB
        num_cores: 2
        os: ubuntu 14.04
        role: worker
        user_name: vm_user
      type: tosca.nodes.ARTICONF.VM.Compute
    kubernetes:
      interfaces:
        Standard:
          create: interfaces/playbooks/kubernetes_install.yaml
      requirements:
      - host:
          capability: tosca.capabilities.ARTICONF.VM.topology
          node: topology
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Orchestrator.Kubernetes
    mysql:
      artifacts:
        image:
          file: mysql:5.7
          repository: docker_hub
          type: tosca.artifacts.Deployment.Image.Container.Docker
      properties:
        environment:
          MYSQL_DATABASE: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_ROOT_PASSWORD: somewordpress
          MYSQL_USER: wordpress
        ports:
        - 3306:3306
        volumes:
        - db_data:/var/lib/mysql
      requirements:
      - host:
          capability: tosca.capabilities.ARTICONF.Orchestrator
          node: kubernetes
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Container.Application.Docker
    topology:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        credential:
          required: false
          type: tosca.datatypes.Credential
        domain:
          default: UvA (Amsterdam, The Netherlands) XO Rack
          description: the domain of this topology e.g. California, UvA, etc
          required: true
          type: string
        name:
          description: the name of this topology
          required: false
          type: string
        provider:
          default: ExoGeni
          description: The name of the provider e.g. EC2, ExoGeni etc.
          required: true
          type: string
        subnet:
          description: The subnet of the VMs this topology e.g. 192.168.10.10/24
          required: false
          type: string
      requirements:
      - vm:
          capability: tosca.capabilities.ARTICONF.VM
          node: compute
          relationship: tosca.relationships.DependsOn
      type: tosca.nodes.ARTICONF.VM.topology
    topology_1:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        domain: Some other Rack
        provider: ExoGeni
      requirements:
      - vm:
          capability: tosca.capabilities.ARTICONF.VM
          node: compute_2
          relationship: tosca.relationships.DependsOn
      - vm:
          capability: tosca.capabilities.ARTICONF.VM
          node: compute
          relationship: tosca.relationships.DependsOn
      type: tosca.nodes.ARTICONF.VM.topology
    wordpress:
      artifacts:
        image:
          file: wordpress:latest
          repository: docker_hub
          type: tosca.artifacts.Deployment.Image.Container.Docker
      properties:
        environment:
          WORDPRESS_DB_HOST: mysql:3306
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DB_PASSWORD: wordpress
          WORDPRESS_DB_USER: wordpress
        ports:
        - 8000:80
      requirements:
      - service:
          node: mysql
          relationship:
            type: tosca.relationships.DependsOn
      - host:
          capability: tosca.capabilities.ARTICONF.Orchestrator
          node: kubernetes
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Container.Application.Docker
  policies:
  - scalability:
      properties:
        fault_tolerance_level: 0
      targets:
      - mysql
      type: tosca.policies.ARTICONF.FaultTolerance
tosca_definitions_version: tosca_simple_yaml_1_0
