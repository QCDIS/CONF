description: TOSCA example
imports:
- nodes: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/nodes.yaml
- capabilities: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/capabilities.yaml
- policies: https://raw.githubusercontent.com/skoulouzis/DRIP/DRIP_3.0/TOSCA/types/policies.yaml
topology_template:
  node_templates:
    compute:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        cpu_frequency: 0.5 GHz
        disk_size: 15000 MB
        host_name: vm
        mem_size: 500 MB
        num_cpus: 1
        os: ubuntu 15
        user_name: vm_user
      type: tosca.nodes.ARTICONF.VM.Compute
    compute_1:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        cpu_frequency: 0.5 GHz
        disk_size: 15000 MB
        host_name: vm
        mem_size: 500 MB
        num_cpus: 1
        os: ubuntu 15
        role: worker
        user_name: vm_user
      type: tosca.nodes.ARTICONF.VM.Compute
    mysql:
      artifacts:
        image:
          file: mysql:5.7
          repository: docker_hub
          type: tosca.artifacts.Deployment.Image.Container.Docker
      properties:
        environment:
          MYSQL_DATABASE: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_ROOT_PASSWORD: somewordpress
          MYSQL_USER: wordpress
        ports:
        - 3306:3306
        volumes:
        - db_data:/var/lib/mysql
      requirements:
      - host:
          capability: tosca.capabilities.ARTICONF.Orchestrator
          node: swarm
          relationship: tosca.relationships.HostedOn
      - useless:
          capability: tosca.capabilities.ARTICONF.Useless
          node: swarm
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Container.Application.Docker
    swarm:
      interfaces:
        Standard:
          create: interfaces/playbooks/docker_swarm_install.yaml
      properties:
        masters_num: 1
        workers_num: 1
      requirements:
      - host:
          capability: tosca.capabilities.Scalable
          node: topology
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Orchestrator.Swarm
    topology:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        domain: {}
        name: {}
        provider: {}
      requirements:
      - vm:
          capability: tosca.capabilities.ARTICONF.VM
          node: compute
          occurrences:
          - 1
          - UNBOUNDED
          relationship: tosca.relationships.DependsOn
      - vm:
          capability: tosca.capabilities.ARTICONF.VM
          node: compute_1
          occurrences:
          - 1
          - UNBOUNDED
          relationship: tosca.relationships.DependsOn
      type: tosca.nodes.ARTICONF.VM.topology
    wordpress:
      artifacts:
        image:
          file: wordpress:latest
          repository: docker_hub
          type: tosca.artifacts.Deployment.Image.Container.Docker
      properties:
        environment:
          WORDPRESS_DB_HOST: mysql:3306
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DB_PASSWORD: wordpress
          WORDPRESS_DB_USER: wordpress
        ports:
        - 8000:80
      requirements:
      - service:
          node: mysql
          relationship:
            type: tosca.relationships.DependsOn
      - host:
          capability: tosca.capabilities.ARTICONF.Orchestrator
          node: swarm
          relationship: tosca.relationships.HostedOn
      - useless:
          capability: tosca.capabilities.ARTICONF.Useless
          node: swarm
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.ARTICONF.Container.Application.Docker
  policies:
  - scalability:
      properties:
        fault_tolerance_level: 0
      targets:
      - mysql
      type: tosca.policies.ARTICONF.FaultTolerance
tosca_definitions_version: tosca_simple_yaml_1_0
