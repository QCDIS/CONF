---
swagger: "2.0"
info:
  description: "TOSCA Simple qUeRy sErvice (SURE). "
  version: "1.0.0"
  title: "tosca-sure"
  contact:
    email: "S.Koulouzis@uva.nl"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/tosca-sure/1.0.0"
schemes:
- "https"
- "http"
paths:
  /tosca_template:
    post:
      summary: "upload a tosca template description file"
      description: "upload and validate a tosca template description file"
      operationId: "upload_tosca_template"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "file"
        in: "formData"
        description: "tosca Template description"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}:
    get:
      description: ""
      operationId: "get_tosca_template"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ToscaTemplate"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template:
    get:
      description: "r"
      operationId: "get_topology_template"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TopologyTemplate"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates:
    get:
      description: "returns nodes templates in topology"
      operationId: "get_node_templates"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - name: "node_name"
        in: "query"
        description: "filter by node name"
        required: false
        type: "string"
      - name: "node_type"
        in: "query"
        description: "filter by node type"
        required: false
        type: "string"
      - name: "has_interface"
        in: "query"
        description: "filter if node has interface"
        required: false
        type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NodeTemplate"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/type_name:
    get:
      summary: ""
      description: ""
      operationId: "get_node_type_name"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: "the NodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/requirements:
    get:
      description: "Returns  the requirements for an input node as described in the\
        \ template not in the node's definition "
      operationId: "get_node_requirements"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: ""
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/parent_type_name:
    get:
      summary: ""
      description: ""
      operationId: "get_parent_type_name"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        description: ""
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/ancestors_requirements:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including\
        \ the input node's"
      operationId: "get_ancestors_requirements"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/ancestors_types:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including\
        \ the input node's"
      operationId: "get_all_ancestor_types"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/ancestors_properties:
    get:
      summary: ""
      description: "Recursively get all requirements all the way to the ROOT including\
        \ the input node's"
      operationId: "get_all_ancestor_properties"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              additionalProperties:
                type: "object"
                properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/properties:
    get:
      summary: ""
      description: "s"
      operationId: "get_node_properties"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
    put:
      summary: ""
      description: "s"
      operationId: "set_node_properties"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "properties"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "string"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/outputs:
    get:
      summary: ""
      description: "s"
      operationId: "get_node_outputs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/topology_template/node_templates/related:
    get:
      summary: ""
      description: "s"
      operationId: "get_related_nodes"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - in: "body"
        name: "nodeTemplate"
        required: false
        schema:
          $ref: "#/definitions/NodeTemplate"
      - name: "node_name"
        in: "query"
        description: "The node name"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NodeTemplate"
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
  /tosca_template/{id}/interface_types:
    get:
      summary: ""
      description: "returns the interface types"
      operationId: "get_interface_types"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of topolog template uplodaed"
        required: true
        type: "string"
      - name: "interface_type"
        in: "query"
        description: "The interface type"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              additionalProperties:
                type: "object"
                properties: {}
        404:
          description: "Not found"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "sure_tosca.controllers.default_controller"
definitions:
  ToscaTemplate:
    type: "object"
    properties:
      tosca_definitions_version:
        type: "string"
      tosca_default_namespace:
        type: "string"
      template_name:
        type: "string"
      topology_template:
        $ref: "#/definitions/TopologyTemplate"
      template_author:
        type: "string"
      template_version:
        type: "string"
      description:
        type: "string"
      imports:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
      dsl_definitions:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      node_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      relationship_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      relationship_templates:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      capability_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      artifact_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      data_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      interface_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      policy_types:
        type: "object"
        additionalProperties:
          type: "string"
      group_types:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      repositories:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
    example:
      node_types:
        key: "{}"
      policy_types:
        key: "policy_types"
      topology_template:
        outputs:
        - key: "{}"
        - key: "{}"
        substitution_mappings:
          key: "{}"
        inputs:
        - key: "{}"
        - key: "{}"
        node_templates:
          key:
            requirements:
            - key: "{}"
            - key: "{}"
            interfaces:
              key: "{}"
            capabilities:
              key: "{}"
            directives:
            - "directives"
            - "directives"
            derived_from: "derived_from"
            description: "description"
            attributes:
              key: "{}"
            type: "type"
            properties:
              key: "{}"
            artifacts:
              key: "{}"
        policies:
        - key: "{}"
        - key: "{}"
        description: "description"
        groups:
          key: "{}"
        relationship_templates:
          key: "{}"
      template_version: "template_version"
      imports:
      - key: "{}"
      - key: "{}"
      template_author: "template_author"
      group_types:
        key: "{}"
      description: "description"
      template_name: "template_name"
      artifact_types:
        key: "{}"
      capability_types:
        key: "{}"
      repositories:
        key: "{}"
      tosca_definitions_version: "tosca_definitions_version"
      dsl_definitions:
        key: "{}"
      interface_types:
        key: "{}"
      relationship_types:
        key: "{}"
      tosca_default_namespace: "tosca_default_namespace"
      relationship_templates:
        key: "{}"
      data_types:
        key: "{}"
  TopologyTemplate:
    type: "object"
    properties:
      description:
        type: "string"
      inputs:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
      node_templates:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/NodeTemplate"
      relationship_templates:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      outputs:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
      groups:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      substitution_mappings:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      policies:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
    example:
      outputs:
      - key: "{}"
      - key: "{}"
      substitution_mappings:
        key: "{}"
      inputs:
      - key: "{}"
      - key: "{}"
      node_templates:
        key:
          requirements:
          - key: "{}"
          - key: "{}"
          interfaces:
            key: "{}"
          capabilities:
            key: "{}"
          directives:
          - "directives"
          - "directives"
          derived_from: "derived_from"
          description: "description"
          attributes:
            key: "{}"
          type: "type"
          properties:
            key: "{}"
          artifacts:
            key: "{}"
      policies:
      - key: "{}"
      - key: "{}"
      description: "description"
      groups:
        key: "{}"
      relationship_templates:
        key: "{}"
  NodeTemplate:
    type: "object"
    properties:
      derived_from:
        type: "string"
      properties:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      requirements:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
      interfaces:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      capabilities:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      type:
        type: "string"
      description:
        type: "string"
      directives:
        type: "array"
        items:
          type: "string"
      attributes:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      artifacts:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
    example:
      requirements:
      - key: "{}"
      - key: "{}"
      interfaces:
        key: "{}"
      capabilities:
        key: "{}"
      directives:
      - "directives"
      - "directives"
      derived_from: "derived_from"
      description: "description"
      attributes:
        key: "{}"
      type: "type"
      properties:
        key: "{}"
      artifacts:
        key: "{}"
